{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/repositories-list/repositories-list.component.html","webpack:///src/app/repositories-list/repositories-list.component.ts","webpack:///src/app/social-links/social-links.component.ts","webpack:///src/app/social-links/social-links.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/services/repository.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","AppModule","RepositoriesListComponent","repositoryService","repositories$","getRepositoriesObservable","SocialLinksComponent","routes","AppRoutingModule","forRoot","MaterialModule","RepositoryService","http","get","pipe","repos","filter","repo","has_pages","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'github-pages';\r\n}\r\n","<app-repositories-list></app-repositories-list>\r\n<app-social-links></app-social-links>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RepositoriesListComponent } from './repositories-list/repositories-list.component';\r\nimport { SocialLinksComponent } from './social-links/social-links.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RepositoriesListComponent,\r\n    SocialLinksComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h2>Repositories</h2>\r\n<ul>\r\n  <li *ngFor=\"let repository of repositories$ | async\">\r\n    <a href=\"https://taylinsquire.github.io/{{repository.name}}\">{{ repository.name }}</a>\r\n    (<a href=\"https://github.com/{{repository.full_name}}\">Github</a>)\r\n  </li>\r\n</ul>","import { Component, OnInit } from '@angular/core';\r\nimport { RepositoryService } from '../services/repository.service';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-repositories-list',\r\n  templateUrl: './repositories-list.component.html',\r\n  styleUrls: ['./repositories-list.component.scss']\r\n})\r\nexport class RepositoriesListComponent implements OnInit {\r\n\r\n  repositories$: Observable<any[]>;\r\n\r\n  constructor(private repositoryService: RepositoryService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.repositories$ = this.repositoryService.getRepositoriesObservable();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-social-links',\r\n  templateUrl: './social-links.component.html',\r\n  styleUrls: ['./social-links.component.scss']\r\n})\r\nexport class SocialLinksComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h4>\r\n    <a href=\"\">LinkedIn</a>\r\n    <a href=\"\">Github</a>\r\n  </h4>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatTabsModule\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatTabsModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RepositoryService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRepositoriesObservable(): Observable<any[]> {\r\n    return this.http\r\n      .get<any[]>('https://api.github.com/users/taylinsquire/repos')\r\n      .pipe(map((repos) => repos.filter((repo) => repo.has_pages)));\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}